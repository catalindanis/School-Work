#include <iostream>

using namespace std;

int x[100],n,nr;

int nat(int n)
{
    if (n<0)
        n=-n;
    return n;
}

int ok(int k)
{
    for (int i=1;i<=k-1;i++)
        if ( (x[i]==x[k]) || (nat( (x[k]-x[i]))==(k-i)))
            return 0;
        return 1;
}

int valoare(int k)
{
    if (k==n)
        return 1;
    return 0;
}
void afisare()
{
    nr++;
    cout<<endl<<" Solutia "<<nr<<" este: "<<endl;
    for (int i=1;i<=n;i++)
    {
        cout<<endl;
        for (int j=1;j<=n;j++)
            if (x[j]==i)
            cout<<"D";
        else
            cout<<" * ";
    }
    cout<<endl;
}
void backtracking (int k)
{
    x[k]=0;
    for (int i=1;i<=n;i++)
    {
        x[k]=i;
        if (ok(k)==1)
        {
            if (valoare(k)==1)
                afisare();
            else
                backtracking(k+1);
        }
    }
}
int main()
{
    cout<<"Dimensiunea tablei ";
    cin>>n;
    if (n<=3)
        cout<<"Nu exista solutii ";
    else
        if (n>=8)
        cout<<"Numarul este prea mare ";
        else
        {
            backtracking (1);
        }
    return 0;
}
